module.exports = class TurnHandler {
    constructor(db) {
        this.db = db;
    }

    emojis = {
        0: 'ðŸ‡¦',
        1: 'ðŸ‡§',
        2: 'ðŸ‡¨',
        3: 'ðŸ‡©',
        4: 'ðŸ‡ª',
        5: 'ðŸ‡«',
        6: 'ðŸ‡¬',
        7: 'ðŸ‡­',
        8: 'ðŸ‡®',
        9: 'ðŸ‡¯',
        10: 'ðŸ‡°',
        11: 'ðŸ‡±',
        12: 'ðŸ‡²',
        13: 'ðŸ‡³',
        14: 'ðŸ‡´',
        15: 'ðŸ‡µ',
        16: 'ðŸ‡¶',
        17: 'ðŸ‡·',
        18: 'ðŸ‡¸',
        19: 'ðŸ‡¹',
        20: 'ðŸ‡º',
        21: 'ðŸ‡»',
        22: 'ðŸ‡¼',
        23: 'ðŸ‡½',
        24: 'ðŸ‡¾',
        25: 'ðŸ‡¿'
    };

    showTurnOptions = (message) => {
        var actions = this._getPlayerActions(message.author.user_id);
        var str = `<@${message.author.id}> You have the following options:`;
        actions.forEach((action, index) => {
            // TODO: handle error on more than 26 skills
            action.emoji = this.emojis[index];
            str += `\n${action.emoji}: **${action.action}** ${action.parameter1}`;
        });
        message.channel.send(str)
            .then(m => {
                this.db.newTurn(message.author.id, m.id, actions);
                // add reactions to message
                actions.forEach(action => {
                    m.react(action.emoji);
                });
            });

    }

    /**
     * returns array of actions a player can take
     * an action is an object
     * {
     *  action: RUN, WEAPON, SKILL, etc...
     *  parameter1: description if skill / item
     * }
     * Attack w/ weapon,
     * Run,
     * Use item,
     * use skill, etc...
     */
    _getPlayerActions = (user_id) => {
        // can always run & attack with weapon
        var list = [
            { action: 'RUN', parameter1: 'Attempt to run away.' },
            { action: 'WEAPON', parameter1: 'Attack using your weapon.' }
        ];
        // here is where we check if they have an item to use
        // would add 'ITEM'
        // here is where we check if they have skills to use
        return list;
    }
}